const models = require('./models');
const User = models.User;
const express = require('express');
const path = require('path');
const app = express();
const { Op, literal } = require('sequelize');
const PORT = process.env.PORT || 3000;

models.sequelize.sync().then(() => {
    console.log(" DB 연결 성공");

}).catch(err => {
    console.log("연결 실패");
    console.log(err);
})

app.use('/static', express.static(path.join(__dirname, 'static')));

app.use(express.urlencoded({ extended: true }));
app.use(express.json());

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

app.get('/join', (req, res) => {
    res.sendFile(path.join(__dirname, 'join.html'));
});

app.post('/join', async (req, res) => {
    const { username, password, email} = req.body;

    try {
        const newUser = await User.create({
            username,
            password,
            email
        });
        res.send('<h1>Register Successful</h1>Go to <a href="/login">Login</a>');

    } catch(error) {
        console.error('가입 실패:',error)
    }
});

app.get('/login', (req, res) => {
    res.sendFile(path.join(__dirname, 'login.html'));
});

app.get('/search', (req, res) => {
    res.sendFile(path.join(__dirname, 'search.html'));
});

app.post('/search', (req, res) => {
    const username = req.body.username;
    const email = req.body.email;
    
    User.findAll({
    where: {
    [Op.and]: literal(`username = '${username}'`),
    email: email
    },
        replacements: []
    })
    .then(users => {
        console.log(users);
    })
    .catch(error => {
        console.error(error);
    });
    
    
})

app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});